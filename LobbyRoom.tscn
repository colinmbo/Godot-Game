[gd_scene load_steps=13 format=2]

[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Camera/Camera.gd" type="Script" id=4]
[ext_resource path="res://Camera/CameraAnchor.gd" type="Script" id=5]
[ext_resource path="res://Textures/SunsetTest1.png" type="Texture" id=7]
[ext_resource path="res://SUNSET.mp3" type="AudioStream" id=8]

[sub_resource type="Environment" id=1]
background_mode = 1
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_energy = 0.15
fog_color = Color( 0, 0, 0, 1 )
fog_depth_begin = 75.0
fog_depth_end = 150.0

[sub_resource type="PlaneMesh" id=2]

[sub_resource type="SpatialMaterial" id=3]
params_cull_mode = 2

[sub_resource type="ConvexPolygonShape" id=4]
points = PoolVector3Array( 1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, -1 )

[sub_resource type="QuadMesh" id=5]
size = Vector2( 2, 2 )

[sub_resource type="Shader" id=6]
code = "shader_type spatial;
render_mode unshaded, blend_mix;

uniform bool is_inverted = false;
uniform float depth_multiplier = 0.25;
uniform float depth_addend = 0.0;
uniform float transparency = 0.75;
uniform vec4 outline_color = vec4(0.0, 0.0, 0.0, 1.0);

float get_linear_depth(vec2 screen_uv, mat4 inv_proj_matrix, float depth) {
	vec3 ndc = vec3(screen_uv, depth) * 2.0 - 1.0;
	vec4 view = inv_proj_matrix * vec4(ndc, 1.0);
	view.xyz /= view.w;
	return -view.z;
}

void vertex() {
	POSITION = vec4(VERTEX, 1.0);
}

void fragment() {

	float depth = get_linear_depth(SCREEN_UV, INV_PROJECTION_MATRIX, texture(DEPTH_TEXTURE, SCREEN_UV).r);
	float depth_neighbor1 = get_linear_depth(SCREEN_UV, INV_PROJECTION_MATRIX, texture(DEPTH_TEXTURE, SCREEN_UV + vec2(1.0/VIEWPORT_SIZE.x,0)).r);
	float depth_neighbor2 = get_linear_depth(SCREEN_UV, INV_PROJECTION_MATRIX, texture(DEPTH_TEXTURE, SCREEN_UV - vec2(1.0/VIEWPORT_SIZE.x,0)).r);
	float depth_neighbor3 = get_linear_depth(SCREEN_UV, INV_PROJECTION_MATRIX, texture(DEPTH_TEXTURE, SCREEN_UV + vec2(0,1.0/VIEWPORT_SIZE.y)).r);
	float depth_neighbor4 = get_linear_depth(SCREEN_UV, INV_PROJECTION_MATRIX, texture(DEPTH_TEXTURE, SCREEN_UV - vec2(0,1.0/VIEWPORT_SIZE.y)).r);

	float diff = 0.0;
	if (is_inverted) {
		diff = -min(depth-depth_neighbor1 + depth-depth_neighbor2, depth-depth_neighbor3 + depth-depth_neighbor4);
	} else {
		diff = max(depth-depth_neighbor1 + depth-depth_neighbor2, depth-depth_neighbor3 + depth-depth_neighbor4);
	}

	float line_strength = round(clamp(diff * depth_multiplier + depth_addend, 0.0, 1.0) * 3.0) / 3.0 * transparency;

	ALBEDO = mix(texture(SCREEN_TEXTURE, SCREEN_UV).rgb, outline_color.rgb, line_strength);
	//ALBEDO = mix(outline_color.rgb, vec3(1.0), line_strength);
//
//	if (texture(mask, SCREEN_UV).a == 0.0) {
//		ALBEDO = vec3(1.0);
//	} else {
//		if (texture(mask, SCREEN_UV, 0.0).rgb != texture(DEPTH_TEXTURE, SCREEN_UV, 0.0).rgb) {
//			ALBEDO = vec3(0.0);
//		}
//	}
	//ALBEDO = texture(mask, SCREEN_UV).rgb;
	
	
	//NEW STUFF HERE
	
	/*float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	float linear_depth = -view.z;*/
	
	//ALBEDO = vec3(0.01) * linear_depth - 0.25;
	//ALBEDO = pow(ALBEDO, vec3(2.2));
	//ALBEDO = pow(texture(mask, SCREEN_UV).rgb, vec3(2.2));
	
	//if (pow(texture(mask, SCREEN_UV).rgb, vec3(2.2)).r <= ALBEDO.r) {
	//	ALBEDO = vec3(0.0);
	//}
	//ALBEDO = pow(texture(mask, SCREEN_UV).rgb, vec3(2.2));
	
	
	//ALBEDO = pow(ALBEDO, vec3(2.2));
	
	
	//if (ALBEDO != pow(texture(mask, SCREEN_UV).rgb, vec3(2.2))) {
	//	ALBEDO = vec3(0.0);
	//}
	
	
	//END
	
	
	//ALBEDO = mix(texture(SCREEN_TEXTURE, SCREEN_UV).rgb, outline_color.rgb, line_strength);
	
	//ALBEDO = (vec3(1.0) - mix(vec3(1.0), outline_color.rgb, line_strength));
	//ALBEDO = vec3(1.0) * texture(DEPTH_TEXTURE, SCREEN_UV).r * 0.01;
	
	
	//ALBEDO = texture(SCREEN_TEXTURE, SCREEN_UV).rgb;
	
	//ALBEDO = texture(DEPTH_TEXTURE, SCREEN_UV).rgb * 0.1;
	
//	vec4 c = texture(TEXTURE, SCREEN_UV, 0.0);
//	if (c.a == 0.0){
//
//		vec2 side_width = width*SCREEN_PIXEL_SIZE;
//		bool is_done = false;
//
//		for (float x = -side_width.x; x <= side_width.x && !is_done; x += SCREEN_PIXEL_SIZE.x) {
//			for (float y = -side_width.y; y <= side_width.y && !is_done; y += SCREEN_PIXEL_SIZE.y) {
//				vec4 nc = texture(TEXTURE, SCREEN_UV + vec2(x, y), 0.0);
//				if ( nc.a != 0.0) {
//					COLOR = color;
//					is_done = true;
//				}
//			}
//		}
//		if (!is_done){
//			COLOR = vec4(0, 0, 0, 0);
//		}
//	}else{
//		COLOR = vec4(0, 0, 0, 0);
//	}

}"

[sub_resource type="ShaderMaterial" id=7]
resource_local_to_scene = true
render_priority = -1
shader = SubResource( 6 )
shader_param/is_inverted = false
shader_param/depth_multiplier = 0.3
shader_param/depth_addend = 0.0
shader_param/transparency = 0.9
shader_param/outline_color = Plane( 0, 0, 0, 1 )

[node name="LobbyRoom" type="Spatial"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="BackgroundCanvas" type="CanvasLayer" parent="WorldEnvironment"]
layer = -1
follow_viewport_enable = true

[node name="TextureRect" type="TextureRect" parent="WorldEnvironment/BackgroundCanvas"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 7 )
stretch_mode = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HUDCanvas" type="CanvasLayer" parent="."]

[node name="Music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 8 )
volume_db = -4.0

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.961934, -0.0745567, -0.262916, 0.250437, 0.625568, 0.738882, 0.109383, -0.776599, 0.620427, 0, 10, 0 )

[node name="Player" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.18135, 0 )
collision/safe_margin = 0.01

[node name="World" type="Spatial" parent="."]
transform = Transform( 0.566016, 0, 0, 0, 0.566016, 0, 0, 0, 0.566016, 0, 0, 0 )

[node name="Ground" type="StaticBody" parent="World"]
transform = Transform( 18, 0, 0, 0, 1, 0, 0, 0, 24, 0, 0, 0 )

[node name="MeshInstance" type="MeshInstance" parent="World/Ground"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Ground"]
shape = SubResource( 4 )

[node name="Ground3" type="StaticBody" parent="World"]
transform = Transform( 45.8145, 0, 0, 0, 1, 0, 0, 0, 5.89471, 0, 0, 32.9836 )

[node name="MeshInstance" type="MeshInstance" parent="World/Ground3"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Ground3"]
shape = SubResource( 4 )

[node name="Ground4" type="StaticBody" parent="World"]
transform = Transform( 41.2525, -0.435011, 0, 19.9298, 0.900425, 0, 0, 0, 5.89471, 9.72366, 0, 32.9836 )

[node name="MeshInstance" type="MeshInstance" parent="World/Ground4"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Ground4"]
shape = SubResource( 4 )

[node name="Ground2" type="StaticBody" parent="World"]
transform = Transform( 16.1189, -0.445073, 0, 8.01133, 0.895494, 0, 0, 0, -6.45506, 27.1938, 7.35867, 0 )

[node name="MeshInstance" type="MeshInstance" parent="World/Ground2"]
transform = Transform( 1, 1.86265e-09, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Ground2"]
shape = SubResource( 4 )

[node name="Hall1" type="StaticBody" parent="World"]
transform = Transform( 60, 0, 0, 0, 1, 0, 0, 0, 10, 0, 0, -33.244 )

[node name="MeshInstance" type="MeshInstance" parent="World/Hall1"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Hall1"]
shape = SubResource( 4 )

[node name="Hall2" type="StaticBody" parent="World"]
transform = Transform( -2.62268e-06, 0, 10, 0, 1, 0, -32.7621, 0, -2.38679e-07, 49.988, -0.000527344, -70.3676 )

[node name="MeshInstance" type="MeshInstance" parent="World/Hall2"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Hall2"]
shape = SubResource( 4 )

[node name="Hall3" type="StaticBody" parent="World"]
transform = Transform( -2.62268e-06, 0, 10, 0, 1, 0, -32.7621, 0, -2.38679e-07, -49.9792, -0.000527344, -70.3676 )

[node name="MeshInstance" type="MeshInstance" parent="World/Hall3"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Hall3"]
shape = SubResource( 4 )

[node name="Hall5" type="StaticBody" parent="World"]
transform = Transform( -2.62268e-06, 0, 10, -5.17137, 0.901061, -3.76746e-08, -10.7443, -0.43369, -7.82751e-08, 49.7859, -5.2507, -113.663 )

[node name="MeshInstance" type="MeshInstance" parent="World/Hall5"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Hall5"]
shape = SubResource( 4 )

[node name="Hall6" type="StaticBody" parent="World"]
transform = Transform( -2.62268e-06, 0, 10, -5.17137, 0.901061, -3.76746e-08, -10.7443, -0.43369, -7.82751e-08, -50.1813, -5.2507, -113.663 )

[node name="MeshInstance" type="MeshInstance" parent="World/Hall6"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Hall6"]
shape = SubResource( 4 )

[node name="Hall4" type="StaticBody" parent="World"]
transform = Transform( 60, 0, 0, 0, 1, 0, 0, 0, 10, 0, -10.2609, -134.005 )

[node name="MeshInstance" type="MeshInstance" parent="World/Hall4"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Hall4"]
shape = SubResource( 4 )

[node name="Hall7" type="StaticBody" parent="World"]
transform = Transform( 31.8347, 0.227264, -5.91667, -23.624, 0.919224, -3.54304e-07, 45.0384, 0.321523, 4.18211, -83.8603, 12.1142, -181.719 )

[node name="MeshInstance" type="MeshInstance" parent="World/Hall7"]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="World/Hall7"]
shape = SubResource( 4 )

[node name="NPCs" type="Spatial" parent="."]
transform = Transform( 0.10498, 0, 0.994474, 0, 1, 0, -0.994474, 0, 0.10498, 5.22889, 0, -11.2416 )

[node name="Outline" type="MeshInstance" parent="."]
extra_cull_margin = 2000.0
mesh = SubResource( 5 )
material/0 = SubResource( 7 )

[node name="CameraAnchor" type="Spatial" parent="."]
pause_mode = 2
transform = Transform( 1, 0, 0, 0, 0.866025, 0.5, 0, -0.5, 0.866025, 0, 3.3, 0.5 )
script = ExtResource( 5 )

[node name="Camera" type="Camera" parent="CameraAnchor"]
transform = Transform( 1, 0, 0, 0, 1, 2.98023e-08, 0, -2.98023e-08, 1, 0, -2.86102e-06, 70 )
keep_aspect = 0
fov = 45.0
far = 500.0
script = ExtResource( 4 )
